let expectedResult = 0, captchaText = "", operators = [["+", (t, a) => t + a, "plus"], ["-", (t, a) => t - a, "minus"]], alphabets = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz", defaultOptions = { "equation": !0, "grid": !1, "reload": !0, "audio": !0, "hoverColor": "#00bcd4" }; function initiateCaptcha(t, a) { defaultOptions = { ...defaultOptions, ...a }; a = document.getElementById(t); prepareAndAppendStyleSheet(), null === a ? console.error("Unable to Find captcha container") : (a.innerHTML = getDOMForCaptchaElements(), fillCaptcha(), addEventListeners()) } function refresh() { fillCaptcha() } function fillCaptcha() { let t = ""; var a; drawOnCanvas(t = defaultOptions.equation ? (a = generateRandomEquation(), expectedResult = a.result, captchaText = a.t, a.equation) : (a = randomText(), expectedResult = a.result, captchaText = a.t, a.result)) } function randomText() { var t = alphabets[Math.floor(Math.random() * alphabets.length)], a = Math.floor(10 * Math.random()), e = Math.floor(10 * Math.random()), c = alphabets[Math.floor(Math.random() * alphabets.length)], n = alphabets[Math.floor(Math.random() * alphabets.length)], o = Math.floor(10 * Math.random()), t = t.toString() + a.toString() + e.toString() + c.toString() + n.toString() + o.toString(); return { result: t, t: prepareTextForAlphabets(t) } } function addEventListeners() { document.querySelector("#reloadCaptcha").addEventListener("click", refresh), document.querySelector("#playCaptcha").addEventListener("click", playAudio) } function prepareTextForAlphabets(a) { let e = ""; for (let t = 0; t < a.length; t++)isNaN(Number(a[t])) ? a[t].toUpperCase() === a[t] ? e += "Uppercase " + a[t] + " " : e += "Lowercase " + a[t] + " " : e += a[t] + " "; return e } function drawOnCanvas(t) { var a = document.getElementById("captcha").getContext("2d"); a.clearRect(0, 0, 110, 30), a.font = "24px Tahoma", a.fillText(t, 5, 20), a.beginPath(), (defaultOptions.grid ? (a.lineWidth = 1.6, drawGrid) : drawArcs)(a), a.stroke() } function drawGrid(t) { t.moveTo(10, 0), t.lineTo(10, 30), t.moveTo(20, 0), t.lineTo(20, 30), t.moveTo(30, 0), t.lineTo(30, 30), t.moveTo(40, 0), t.lineTo(40, 30), t.moveTo(50, 0), t.lineTo(50, 30), t.moveTo(0, 10), t.lineTo(110, 10), t.moveTo(0, 20), t.lineTo(110, 20), t.strokeStyle = "black" } function drawArcs(t) { t.arc(95, 50, 40, 0, 2 * Math.PI), t.arc(75, 30, 40, 0, 2 * Math.PI), t.arc(5, 50, 40, 0, 2 * Math.PI), t.arc(95, 60, 40, 0, 2 * Math.PI), t.arc(85, 50, 40, 0, 2 * Math.PI), t.arc(80, 60, 40, 0, 2 * Math.PI), t.arc(10, 50, 40, 0, 2 * Math.PI), t.arc(15, 50, 45, 0, 2 * Math.PI), t.arc(25, 50, 50, 0, 2 * Math.PI) } function generateRandomEquation() { var t = Math.floor(1e3 * Math.random()) + 1, a = Math.floor(20 * Math.random()) + 1, e = getRandomOperator(); return { equation: `${t} ${e[0]} ` + a, result: e[1](t, a), t: `${t} ${e[2]} ` + a } } function getRandomOperator() { return operators[Math.floor(Math.random() * operators.length)] } function validateCaptcha() { let t = document.getElementById("captchaValue").value; return defaultOptions.equation && (t = Number(t)), !(!expectedResult || expectedResult !== t) || (fillCaptcha(), !1) } function playAudio() { var t = speechSynthesis, a = new SpeechSynthesisUtterance(captchaText); a.rate = .5, t.speak(a) } function playAudio_Test_Optimize() { try { let c = captchaText.split(" "), n = 0, o = t => { var a = new SpeechSynthesisUtterance, e = window.speechSynthesis.getVoices(); a.voice = e[0], a.volume = 1, a.text = t, a.lang = "en-US", a.onend = () => { ++n < c.length && o(c[n]) }, speechSynthesis.speak(a) }; o(c[0]) } catch (t) { console.error(t) } } function prepareAndAppendStyleSheet() { var t = document.head || document.getElementsByTagName("head")[0], a = document.createElement("style"); t.appendChild(a), a.appendChild(document.createTextNode(getStyle())) } function getDOMForCaptchaElements() {
    return `<div class="canvas-and-btn-container">
                    <canvas id="captcha" width="110" height="30">Sorry, your browser does not support canvas.</canvas >
                    ${defaultOptions.reload ? `<div id="reloadCaptcha" class="icon-container" title="Reload Captcha">
                        <svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 32 32" viewBox="0 0 32 32" id="change"><path d="M12 3H6C4.3457 3 3 4.3457 3 6v6c0 1.6543 1.3457 3 3 3h6c1.6543 0 3-1.3457 3-3V6C15 4.3457 13.6543 3 12 3zM13 12c0 .5518-.4482 1-1 1H6c-.5518 0-1-.4482-1-1V6c0-.5518.4482-1 1-1h6c.5518 0 1 .4482 1 1V12zM26 17h-6c-1.6543 0-3 1.3457-3 3v6c0 1.6543 1.3457 3 3 3h6c1.6543 0 3-1.3457 3-3v-6C29 18.3457 27.6543 17 26 17zM27 26c0 .5518-.4482 1-1 1h-6c-.5518 0-1-.4482-1-1v-6c0-.5518.4482-1 1-1h6c.5518 0 1 .4482 1 1V26zM20.9394 12.3526c.1953.1952.5118.1952.7071-.0001l.707-.707c.1953-.1953.1953-.5119-.0001-.7072L20.4144 9H24c.5523 0 1 .4477 1 1v4.5c0 .2761.2239.5.5.5h1c.2761 0 .5-.2239.5-.5V10c0-1.6569-1.3431-3-3-3h-3.5862l1.9388-1.9395c.1952-.1953.1952-.5118-.0001-.707l-.707-.707c-.1953-.1953-.5119-.1953-.7072.0001l-3.6456 3.6465c-.3904.3904-.3903 1.0235.0002 1.4139L20.9394 12.3526zM11.0606 19.6474c-.1953-.1953-.5118-.1952-.7071.0001l-.707.7069c-.1953.1953-.1953.5119.0001.7072L11.5856 23H8c-.5523 0-1-.4478-1-1v-4.5C7 17.2238 6.7761 17 6.5 17h-1C5.2239 17 5 17.2238 5 17.5V22c0 1.6569 1.3431 3 3 3h3.5862l-1.9388 1.9394c-.1952.1953-.1952.5118.0001.7071l.707.7069c.1953.1953.5119.1953.7072 0l3.6456-3.6465c.3904-.3905.3903-1.0235-.0002-1.4139L11.0606 19.6474z"></path></svg>
                    </div>`: ""}
                    ${defaultOptions.audio ? `<div id="playCaptcha" class="icon-container" title="Spell Captcha">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="audio"><path d="M12 3a1 1 0 0 0-1 1V20a1 1 0 0 0 2 0V4A1 1 0 0 0 12 3zM8 5A1 1 0 0 0 7 6V18a1 1 0 0 0 2 0V6A1 1 0 0 0 8 5zM4 7A1 1 0 0 0 3 8v8a1 1 0 0 0 2 0V8A1 1 0 0 0 4 7zM16 5a1 1 0 0 0-1 1V18a1 1 0 0 0 2 0V6A1 1 0 0 0 16 5zM20 7a1 1 0 0 0-1 1v8a1 1 0 0 0 2 0V8A1 1 0 0 0 20 7z"></path></svg>
                    </div>`: ""}
                </div>
                <input class="captcha-answer-box" type="text" id="captchaValue" placeholder="Captcha Value" />`} function getStyle() {
    return `#captcha {
            border: 1px solid grey;
        }

        .icon-container {
            display: inline-block;
            cursor: pointer;
            width: inherit;
            height: inherit;
        }

        .icon-container svg {
            height: 32px;
        }

        .icon-container:hover svg {
            fill: ${defaultOptions.hoverColor};
} `} export { initiateCaptcha, validateCaptcha };